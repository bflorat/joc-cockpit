/**
 * Created by sourabhagrawal on 18/5/15.
 */

'use strict';
var app = angular.module('com.module.users', []);


app.config(["$stateProvider", function($stateProvider) {

    /**
     * Check is user loggedout or not
     * @param $q
     * @param $timeout
     * @param $location
     * @param OUAuth
     * @returns {*}
     */
    var checkLoggedout = function ($q, $timeout, $location, OUAuth) {
        // Initialize a new promise
        var deferred = $q.defer();

        // Not Authenticated
        if (!OUAuth.refreshToken) {

             $location.path('/login');
             $timeout(deferred.resolve);
        }
        //  Authenticated
        else {
           if($location.path()==='/login')
               $location.path('/');
               $timeout(deferred.reject);

        }

        return deferred.promise;
    };
    checkLoggedout.$inject = ["$q", "$timeout", "$location", "OUAuth"];


     /**
     * Check is user locked or not
     * @param $q
     * @param $timeout
     * @param $location
     * @param OUAuth
     * @returns {*}
     */
    var checkAccessToken = function ($q, $timeout, $location, OUAuth) {
         // Initialize a new promise
         var deferred = $q.defer();

         if (OUAuth.refreshToken) {
             // Not Authenticated
             if (!OUAuth.accessTokenId) {
                 $timeout(deferred.resolve);
             }
             //  Authenticated
             else {
                 $location.path('/');
                 $timeout(deferred.reject);
             }
         } else {
               $location.path('/login');
               $timeout(deferred.reject);
        }

         return deferred.promise;
     };
     checkAccessToken.$inject = ["$q", "$timeout", "$location", "OUAuth"];

    $stateProvider

        .state('login', {
            url: '/login',
            templateUrl: 'modules/users/views/login.html',
            controller: 'LoginCtrl',
            ncyBreadcrumb: {
                skip: true
            },
            resolve: {
                loggedout: checkLoggedout,
                deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                        name: 'login',
                        files: [
                            'js/jquery.validate.min.js',
                            'js/jquery.backstretch.min.js',
                            'js/login.js'
                        ]
                    });
                }]
            }
        })
        .state('locked', {
            url: '/locked',
            templateUrl: 'modules/users/views/lock.html',
            controller: 'LockedCtrl',
            ncyBreadcrumb: {
                skip: true
            },
            resolve: {
                loggedout: checkAccessToken,
                deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                        name: 'locked',
                        files: [
                            'js/jquery.backstretch.min.js'
                        ]
                    });
                }]
            }
        })
        .state('app.reset', {
            url: 'reset',
            templateUrl: 'modules/users/views/change-password.html',
            controller: 'ResetCtrl',
            ncyBreadcrumb: {
              label: 'Change Password',
              parent: 'app.dashboard'
            }
        })
        .state('app.profile', {
            url: 'profile',
            templateUrl: 'modules/users/views/profile.html',
            controller: 'ProfileCtrl',
            ncyBreadcrumb: {
              label: 'Personal Info',
              parent: 'app.dashboard'
            }
        });
}]);