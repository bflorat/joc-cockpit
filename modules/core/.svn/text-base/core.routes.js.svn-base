/**
 * Created by sourabhagrawal on 6/5/15.
 */


'use strict';

/**
 * @ngdoc overview
 * @name com.module.core
 * @module
 * @description
 * @requires coursekApp
 *
 * The `core` module provides services for interacting with
 * Core module of application
 *
 */
var app = angular.module('com.module.core', []);


  app.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

      /**
       * Check is user loggedin or not
       * @param $q
       * @param $timeout
       * @param $location
       * @param OUAuth
       * @returns {*}
       */
      var checkLoggedin = function ($q, $timeout, $location, OUAuth, LoginService, UserService) {
          // Initialize a new promise
          var deferred = $q.defer();

          // Authenticated
          if (OUAuth.refreshToken) {
              if (OUAuth.accessTokenId) {
                  $timeout(deferred.resolve);
              } else {

                  if (OUAuth.currentUserData) {
                        $timeout(deferred.reject);
                          $location.path('/locked');

                  }else{

                      LoginService.userToken().then(function (response) {
                          console.log(response);
                          UserService.getUser(response.value).then(function (res) {
                              if (res) {
                                  OUAuth.setUser(response.value, res, response.refreshToken.value);
                                  OUAuth.save();
                                  window.location.reload();
                              } else {
                                  $timeout(deferred.reject);
                                  $location.path('/login');
                              }
                          }, function (err) {
                              $timeout(deferred.reject);
                              $location.path('/login');
                          });

                          $timeout(deferred.resolve);
                      }, function (error) {
                          $timeout(deferred.reject);
                          $location.path('/login');
                      });
                  }
              }
          }
          // Not Authenticated
          else {
              $timeout(deferred.reject);
              $location.path('/login');
          }

          return deferred.promise;
      };
      checkLoggedin.$inject = ["$q", "$timeout", "$location", "OUAuth", "LoginService", "UserService"];

      $stateProvider

          .state('app', {
              abstract: true,
              url: '/',
              templateUrl: 'modules/core/views/main.html',
              resolve: {
                  loggedin: checkLoggedin
              },
              ncyBreadcrumb: {
                  label: ''
              }
          })

          .state('app.dashboard', {
              url: '',
              templateUrl: 'modules/core/views/dashboard.html',
              ncyBreadcrumb: {
                  label: 'Home'
              }
          })

      $urlRouterProvider.otherwise('/login');
  }]);


   app.config(["IdleProvider", "KeepaliveProvider", function(IdleProvider, KeepaliveProvider) {
      // configure Idle settings
      IdleProvider.idle(60 * 60); // in seconds
      IdleProvider.timeout(5 * 60); // in seconds
      KeepaliveProvider.interval(10); // in seconds
    }]);

