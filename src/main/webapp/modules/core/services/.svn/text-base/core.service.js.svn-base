/**
 * Created by sourabhagrawal on 6/5/15.
 */


'use strict';
var app = angular.module('com.module.core');

  app.service('CoreService', ["SweetAlert", "toasty", function(SweetAlert, toasty) {

      this.alert = function (title, text) {
          SweetAlert.swal(title, text);
      };

      this.alertSuccess = function (title, text) {
          SweetAlert.swal(title, text, 'success');
      };

      this.alertError = function (title, text) {
          SweetAlert.swal(title, text, 'error');
      };

      this.alertWarning = function (title, text) {
          SweetAlert.swal(title, text, 'warning');
      };

      this.alertInfo = function (title, text) {
          SweetAlert.swal(title, text, 'info');
      };

      this.confirm = function (title, text, successCb, cancelCb) {
          var config = {
              title: title,
              text: text,
              type: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#DD6B55',
              allowOutsideClick: false
          };
          this._swal(config, successCb, cancelCb);
      };

      this.confirmation = function (title, text, successCb, cancelCb) {
          var config = {
              title: title,
              text: text,
              showCancelButton: true,
              cancelButtonText: "No",
              confirmButtonText: "Yes",
              confirmButtonColor: '#f0ad4e',
              allowOutsideClick: false,
              timer: 299000
          };
          this._swal(config, successCb, cancelCb);
      };

      this._swal = function (config, successCb, cancelCb) {
          SweetAlert.swal(config,
              function (confirmed) {
                  if (confirmed) {
                      successCb();
                  } else {
                      cancelCb();
                  }
              });
      };

      this.prompt = function (title, text, successCb) {
          var config = {
              title: title,
              text: text,
              type: 'info',
              showCancelButton: false,
              confirmButtonColor: '#5bc0de',
              allowOutsideClick: false
          };
          this._swalp(config, successCb);
      };

      this._swalp = function (config, successCb) {
          SweetAlert.swal(config,
              function (confirmed) {
                  if (confirmed) {
                      successCb();
                  }
              });
      };

      this.toastSuccess = function (title, text) {
          toasty.pop.success({
              title: title,
              msg: text,
              sound: false
          });
      };

      this.toastError = function (title, text) {
          toasty.pop.error({
              title: title,
              msg: text,
              sound: false,
              showClose: true
          });
      };

      this.toastWarning = function (title, text) {
          toasty.pop.warning({
              title: title,
              msg: text,
              sound: true,
              timeout: 0,
              showClose: true
          });
      };

      this.toastInfo = function (title, text) {
          toasty.pop.info({
              title: title,
              msg: text,
              sound: false,
              timeout: 5000
          });
      };

      this.toastWait = function (title, text) {
          toasty.pop.wait({
              title: title,
              msg: text,
              sound: false,
               timeout: 0
          });
      };

      this.toastClear = function () {
           toasty.clear()
      };
  }]);

    // Url of server API and file path
 app.factory('URL', function() {

     return {

         /**
          * Return Rest API URL
          * @returns {string}
          */
         getUrl: function () {
             var url = 'http://moon.r12expert.com:8080/OU_Spring/';
             return url;
         },

         /**
          * Return server path of file
          * @returns {string}
          */
         filePathUrl: function(){
             var url = 'http://cdn.r12expert.com/cdn/';
             return url;
         }
     };
 });


 app.factory('CheckService', function() {
     return {

         /**
          * Check file path
          * @returns {boolean}
          */
         validExt: function (ext) {
              if(ext === 'mp3' || ext === 'mp4' || ext === 'ogg'
              || ext === 'ogv' || ext === 'webm'
              || ext === 'wav' || ext === 'doc' || ext === 'docx'
              || ext === 'ppt'|| ext === 'pptx'|| ext === 'pdf'
              || ext === 'txt') {
                  return true;
              }
             return false;
         }
     };
 });
